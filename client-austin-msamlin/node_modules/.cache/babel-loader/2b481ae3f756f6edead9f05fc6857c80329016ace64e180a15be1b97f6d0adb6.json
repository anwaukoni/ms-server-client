{"ast":null,"code":"var _jsxFileName = \"/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/task/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { updateSort } from './taskSlice';\nimport { fetchTasks } from './taskApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useAppDispatch();\n  const taskList = useAppSelector(state => state.tasks);\n  const [draggedItemIndex, setDraggedItemIndex] = React.useState(null);\n  useEffect(() => {\n    setLoading(true);\n    dispatch(fetchTasks());\n    setLoading(false);\n  }, [dispatch]);\n  const onDragStart = index => {\n    setDraggedItemIndex(index);\n  };\n  const onDragOver = index => {\n    if (draggedItemIndex === index || draggedItemIndex === null) return;\n    const updatedItems = [...taskList];\n    const draggedItem = updatedItems[draggedItemIndex];\n    updatedItems.splice(draggedItemIndex, 1);\n    updatedItems.splice(index, 0, draggedItem);\n    setDraggedItemIndex(index);\n    dispatch(updateSort(updatedItems)); // Update items in the Redux store\n  };\n  const onDragEnd = () => {\n    setDraggedItemIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? 'loading...' : taskList\n\n    // taskList.map((task) => (\n    //   <div \n    //     key={task.sortOrder}\n    //     onDragStart={() => onDragStart(task.sortOrder)}\n    //     onDragOver={() => onDragOver(task.sortOrder)}\n    //     onDragEnd={onDragEnd}\n    //     // draggable\n    //     style={{\n    //       padding: '8px',\n    //       margin: '8px 0',\n    //       backgroundColor: draggedItemIndex === task.sortOrder ? 'green' : 'lightgray',\n    //       cursor: 'grab'\n    //     }}\n    //   >\n    //     <input\n    //       type=\"text\"\n    //       value={task.message}\n    //       onChange={(e) => dispatch(editTask({ id: task.id, message: e.target.value }))} />\n    //     <button onClick={() => dispatch(deleteTask({id: task.id}))}>X</button>\n    //   </div>\n    // ))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"1XmEEAHyqEr3bWtc1cXyd7lSkM8=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","useAppDispatch","useAppSelector","updateSort","fetchTasks","jsxDEV","_jsxDEV","TaskList","_s","loading","setLoading","dispatch","taskList","state","tasks","draggedItemIndex","setDraggedItemIndex","onDragStart","index","onDragOver","updatedItems","draggedItem","splice","onDragEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/task/TaskList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { AppDispatch, RootState } from '../../app/store';\nimport { editTask, deleteTask, updateSort } from './taskSlice';\nimport { fetchTasks } from './taskApi';\n\nconst  TaskList: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const dispatch: AppDispatch = useAppDispatch();\n  const  taskList = useAppSelector((state: RootState)=> state.tasks);\n  const [draggedItemIndex, setDraggedItemIndex] = React.useState<number | null>(null);\n  useEffect(() => {\n    setLoading(true)\n    dispatch(fetchTasks())\n    setLoading(false)\n  }, [dispatch])\n  \n  const onDragStart = (index: number) => {\n    setDraggedItemIndex(index);\n  };\n\n  const onDragOver = (index: number) => {\n    if (draggedItemIndex === index || draggedItemIndex === null) return;\n\n    const updatedItems = [...taskList];\n    const draggedItem = updatedItems[draggedItemIndex];\n    updatedItems.splice(draggedItemIndex, 1);\n    updatedItems.splice(index, 0, draggedItem);\n    setDraggedItemIndex(index);\n    dispatch(updateSort(updatedItems)); // Update items in the Redux store\n  };\n\n  const onDragEnd = () => {\n    setDraggedItemIndex(null);\n  };\n\n  return (\n    <div>\n      {loading ? 'loading...': taskList\n      \n      \n      // taskList.map((task) => (\n      //   <div \n      //     key={task.sortOrder}\n      //     onDragStart={() => onDragStart(task.sortOrder)}\n      //     onDragOver={() => onDragOver(task.sortOrder)}\n      //     onDragEnd={onDragEnd}\n      //     // draggable\n      //     style={{\n      //       padding: '8px',\n      //       margin: '8px 0',\n      //       backgroundColor: draggedItemIndex === task.sortOrder ? 'green' : 'lightgray',\n      //       cursor: 'grab'\n      //     }}\n      //   >\n      //     <input\n      //       type=\"text\"\n      //       value={task.message}\n      //       onChange={(e) => dispatch(editTask({ id: task.id, message: e.target.value }))} />\n      //     <button onClick={() => dispatch(deleteTask({id: task.id}))}>X</button>\n      //   </div>\n      // ))\n      }\n    </div>\n  )\n}\n\nexport default  TaskList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAEhE,SAA+BC,UAAU,QAAQ,aAAa;AAC9D,SAASC,UAAU,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAOC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMW,QAAqB,GAAGV,cAAc,CAAC,CAAC;EAC9C,MAAOW,QAAQ,GAAGV,cAAc,CAAEW,KAAgB,IAAIA,KAAK,CAACC,KAAK,CAAC;EAClE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,KAAK,CAACE,QAAQ,CAAgB,IAAI,CAAC;EACnFD,SAAS,CAAC,MAAM;IACdW,UAAU,CAAC,IAAI,CAAC;IAChBC,QAAQ,CAACP,UAAU,CAAC,CAAC,CAAC;IACtBM,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,CAACC,QAAQ,CAAC,CAAC;EAEd,MAAMM,WAAW,GAAIC,KAAa,IAAK;IACrCF,mBAAmB,CAACE,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAID,KAAa,IAAK;IACpC,IAAIH,gBAAgB,KAAKG,KAAK,IAAIH,gBAAgB,KAAK,IAAI,EAAE;IAE7D,MAAMK,YAAY,GAAG,CAAC,GAAGR,QAAQ,CAAC;IAClC,MAAMS,WAAW,GAAGD,YAAY,CAACL,gBAAgB,CAAC;IAClDK,YAAY,CAACE,MAAM,CAACP,gBAAgB,EAAE,CAAC,CAAC;IACxCK,YAAY,CAACE,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAEG,WAAW,CAAC;IAC1CL,mBAAmB,CAACE,KAAK,CAAC;IAC1BP,QAAQ,CAACR,UAAU,CAACiB,YAAY,CAAC,CAAC,CAAC,CAAC;EACtC,CAAC;EAED,MAAMG,SAAS,GAAGA,CAAA,KAAM;IACtBP,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,oBACEV,OAAA;IAAAkB,QAAA,EACGf,OAAO,GAAG,YAAY,GAAEG;;IAGzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEG,CAAC;AAEV,CAAC;AAAApB,EAAA,CA3DMD,QAAkB;EAAA,QAEON,cAAc,EAC1BC,cAAc;AAAA;AAAA2B,EAAA,GAH3BtB,QAAkB;AA6DzB,eAAgBA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}