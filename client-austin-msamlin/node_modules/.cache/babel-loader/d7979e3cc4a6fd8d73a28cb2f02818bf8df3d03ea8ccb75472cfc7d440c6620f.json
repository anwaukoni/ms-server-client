{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst todos = createSlice({\n  name: \"todos\",\n  initialState: [],\n  reducers: {\n    addTodo: (state, action) => {\n      state.push({\n        id: new Date().toISOString(),\n        title: action.payload.title,\n        description: action.payload.description\n      });\n    },\n    deleteTodo: (state, action) => {\n      return state.filter(todo => todo.id !== action.payload.id);\n    },\n    sort: (state, action) => {\n      const {\n        id,\n        index\n      } = action.payload;\n      const todo = state.find(todo => todo.id === id);\n      if (todo) {\n        const currentIndex = state.indexOf(todo);\n        state.splice(currentIndex, 1);\n        state.splice(index, 0, todo);\n      } else {\n        return state;\n      }\n    }\n  }\n});\nexport default todos;","map":{"version":3,"names":["createSlice","todos","name","initialState","reducers","addTodo","state","action","push","id","Date","toISOString","title","payload","description","deleteTodo","filter","todo","sort","index","find","currentIndex","indexOf","splice"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/todo/todoSlice.ts"],"sourcesContent":["import { PayloadAction, createSlice } from \"@reduxjs/toolkit\";\n\nexport interface Todo {\n  id: string;\n  title: string;\n  description: string;\n}\n\nconst todos = createSlice({\n  name: \"todos\",\n  initialState: [] as Todo[],\n  reducers: {\n    addTodo: (state, action: PayloadAction<{\n      title: string, description: string\n    }>) => {\n      state.push({\n        id: new Date().toISOString(),\n        title: action.payload.title,\n        description: action.payload.description,\n      })\n    },\n    deleteTodo: (state, action: PayloadAction<{ id: string }>) => {\n      return state.filter((todo) => todo.id !== action.payload.id)\n    },\n    sort: (state, action: PayloadAction<{ id: string, index: number }>) => {\n      const { id, index } = action.payload;\n      const todo = state.find((todo) => todo.id === id);\n      if (todo) {\n        const currentIndex = state.indexOf(todo);\n        state.splice(currentIndex, 1);\n        state.splice(index, 0, todo);\n      } else {\n        return state;\n      }\n    }\n  }\n})\n\nexport default todos;\n"],"mappings":"AAAA,SAAwBA,WAAW,QAAQ,kBAAkB;AAQ7D,MAAMC,KAAK,GAAGD,WAAW,CAAC;EACxBE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE,EAAY;EAC1BC,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAEf,KAAK;MACLD,KAAK,CAACE,IAAI,CAAC;QACTC,EAAE,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAC5BC,KAAK,EAAEL,MAAM,CAACM,OAAO,CAACD,KAAK;QAC3BE,WAAW,EAAEP,MAAM,CAACM,OAAO,CAACC;MAC9B,CAAC,CAAC;IACJ,CAAC;IACDC,UAAU,EAAEA,CAACT,KAAK,EAAEC,MAAqC,KAAK;MAC5D,OAAOD,KAAK,CAACU,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKF,MAAM,CAACM,OAAO,CAACJ,EAAE,CAAC;IAC9D,CAAC;IACDS,IAAI,EAAEA,CAACZ,KAAK,EAAEC,MAAoD,KAAK;MACrE,MAAM;QAAEE,EAAE;QAAEU;MAAM,CAAC,GAAGZ,MAAM,CAACM,OAAO;MACpC,MAAMI,IAAI,GAAGX,KAAK,CAACc,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACR,EAAE,KAAKA,EAAE,CAAC;MACjD,IAAIQ,IAAI,EAAE;QACR,MAAMI,YAAY,GAAGf,KAAK,CAACgB,OAAO,CAACL,IAAI,CAAC;QACxCX,KAAK,CAACiB,MAAM,CAACF,YAAY,EAAE,CAAC,CAAC;QAC7Bf,KAAK,CAACiB,MAAM,CAACJ,KAAK,EAAE,CAAC,EAAEF,IAAI,CAAC;MAC9B,CAAC,MAAM;QACL,OAAOX,KAAK;MACd;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAeL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}