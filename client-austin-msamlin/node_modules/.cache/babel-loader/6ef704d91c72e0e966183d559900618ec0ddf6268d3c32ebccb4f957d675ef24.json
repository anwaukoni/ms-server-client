{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { logOut } from '../../features/auth/authSlice';\nconst baseQuery = fetchBaseQuery({\n  baseUrl: 'http://localhost:3333',\n  credentials: 'include',\n  prepareHeaders: (headers, {\n    getState\n  }) => {\n    const state = getState();\n    const token = state.auth.token;\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  }\n});\nconst baseQueryWithReauth = async (args, api, extraOptions) => {\n  console.log({\n    args,\n    api,\n    extraOptions\n  });\n  let result = await baseQuery(args, api, extraOptions);\n  if (result.error) {\n    api.dispatch(logOut());\n  }\n  return result;\n};\nexport const apiSlice = createApi({\n  baseQuery: baseQueryWithReauth,\n  endpoints: builder => ({})\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","logOut","baseQuery","baseUrl","credentials","prepareHeaders","headers","getState","state","token","auth","set","baseQueryWithReauth","args","api","extraOptions","console","log","result","error","dispatch","apiSlice","endpoints","builder"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/app/api/apiSlice.ts"],"sourcesContent":["import { BaseQueryApi, FetchArgs, createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { logOut } from '../../features/auth/authSlice'\nimport { RootState } from '../store'\n\nconst baseQuery = fetchBaseQuery({\n\tbaseUrl: 'http://localhost:3333',\n\tcredentials: 'include',\n\tprepareHeaders: (headers, { getState}) => {\n\t\t\tconst state = getState() as RootState\n\t\t\tconst token = state.auth.token\n\t\t\tif (token) {\n\t\t\t\t\theaders.set(\"authorization\", `Bearer ${token}`)\n\t\t\t}\n\t\t\treturn headers\n\t}\n})\n\nconst baseQueryWithReauth = async (args: string | FetchArgs, api: BaseQueryApi, extraOptions: {}) => {\n\tconsole.log({args, api, extraOptions});\n\n\tlet result = await baseQuery(args, api, extraOptions)\n\n\tif (result.error) {\n\t\t\tapi.dispatch(logOut())\n\t}\n\t\n\treturn result\n}\n\nexport const apiSlice = createApi({\n    baseQuery: baseQueryWithReauth,\n    endpoints: builder => ({})\n})"],"mappings":"AAAA,SAAkCA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACjG,SAASC,MAAM,QAAQ,+BAA+B;AAGtD,MAAMC,SAAS,GAAGF,cAAc,CAAC;EAChCG,OAAO,EAAE,uBAAuB;EAChCC,WAAW,EAAE,SAAS;EACtBC,cAAc,EAAEA,CAACC,OAAO,EAAE;IAAEC;EAAQ,CAAC,KAAK;IACxC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAc;IACrC,MAAME,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACD,KAAK;IAC9B,IAAIA,KAAK,EAAE;MACTH,OAAO,CAACK,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;IACjD;IACA,OAAOH,OAAO;EAChB;AACD,CAAC,CAAC;AAEF,MAAMM,mBAAmB,GAAG,MAAAA,CAAOC,IAAwB,EAAEC,GAAiB,EAAEC,YAAgB,KAAK;EACpGC,OAAO,CAACC,GAAG,CAAC;IAACJ,IAAI;IAAEC,GAAG;IAAEC;EAAY,CAAC,CAAC;EAEtC,IAAIG,MAAM,GAAG,MAAMhB,SAAS,CAACW,IAAI,EAAEC,GAAG,EAAEC,YAAY,CAAC;EAErD,IAAIG,MAAM,CAACC,KAAK,EAAE;IAChBL,GAAG,CAACM,QAAQ,CAACnB,MAAM,CAAC,CAAC,CAAC;EACxB;EAEA,OAAOiB,MAAM;AACd,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAGtB,SAAS,CAAC;EAC9BG,SAAS,EAAEU,mBAAmB;EAC9BU,SAAS,EAAEC,OAAO,KAAK,CAAC,CAAC;AAC7B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}