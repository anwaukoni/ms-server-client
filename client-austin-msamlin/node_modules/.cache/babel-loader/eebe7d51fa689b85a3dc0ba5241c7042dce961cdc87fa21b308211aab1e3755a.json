{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { addTasks } from './taskSlice';\nconst options = {\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYUBnbWFpbC5jb20iLCJpYXQiOjE3MTgwMzU1NDYsImV4cCI6MTcxODEyMTk0Nn0.fXpP2RJHTXSAD2SyFQfhnBlU0NasJgnbESEtN-NxpqE\",\n    \"Content-Length\": \"0\"\n  }\n};\nexport const fetchTasks = createAsyncThunk('tasks/fetchTasks', async (_, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('http://localhost:3333/tasks', options);\n    if (!response.ok) {\n      return rejectWithValue({\n        error: 'Network response was not ok'\n      });\n    }\n    const data = await response.json();\n    ;\n    const result = data.map(elem => ({\n      id: elem.id,\n      message: elem.description,\n      sortOrder: elem.sortOrder\n    }));\n    // console.log(result)\n    dispatch(addTasks(result)); // dispatch the action to add tasks\n    return data;\n  } catch (error) {\n    return rejectWithValue({\n      error: error.message\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","addTasks","options","fetchTasks","_","dispatch","rejectWithValue","response","fetch","ok","error","data","json","result","map","elem","id","message","description","sortOrder"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/task/taskApi.ts"],"sourcesContent":["\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Task, addTasks } from './taskSlice';\n\nconst options = {\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYUBnbWFpbC5jb20iLCJpYXQiOjE3MTgwMzU1NDYsImV4cCI6MTcxODEyMTk0Nn0.fXpP2RJHTXSAD2SyFQfhnBlU0NasJgnbESEtN-NxpqE\",\n    \"Content-Length\": \"0\"\n  }\n};\n\ntype FetchTasksResponse = {\n  id: number;\n  description: string;\n  sortOrder: number;\n}\n\nexport const fetchTasks = createAsyncThunk<Task[], void, { rejectValue: { error: string } }>(\n  'tasks/fetchTasks',\n  async (_, { dispatch, rejectWithValue }) => {\n    try {\n      const response = await fetch('http://localhost:3333/tasks', options);\n      if (!response.ok) {\n        return rejectWithValue({ error: 'Network response was not ok' });\n      }\n      const data: Task[] = await response.json();;\n\n      const result: Task[] = data.map((elem) => ({id: elem.id, message: elem.description, sortOrder: elem.sortOrder}))\n      // console.log(result)\n      dispatch(addTasks(result)); // dispatch the action to add tasks\n      return data;\n    } catch (error: any) {\n      return rejectWithValue({ error: error.message });\n    }\n  }\n);"],"mappings":"AACA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAAeC,QAAQ,QAAQ,aAAa;AAE5C,MAAMC,OAAO,GAAG;EACd,QAAQ,EAAE,KAAK;EACf,SAAS,EAAE;IACT,cAAc,EAAE,mCAAmC;IACnD,eAAe,EAAE,iLAAiL;IAClM,gBAAgB,EAAE;EACpB;AACF,CAAC;AAQD,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CACxC,kBAAkB,EAClB,OAAOI,CAAC,EAAE;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAEN,OAAO,CAAC;IACpE,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;MAChB,OAAOH,eAAe,CAAC;QAAEI,KAAK,EAAE;MAA8B,CAAC,CAAC;IAClE;IACA,MAAMC,IAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAAC;IAE3C,MAAMC,MAAc,GAAGF,IAAI,CAACG,GAAG,CAAEC,IAAI,KAAM;MAACC,EAAE,EAAED,IAAI,CAACC,EAAE;MAAEC,OAAO,EAAEF,IAAI,CAACG,WAAW;MAAEC,SAAS,EAAEJ,IAAI,CAACI;IAAS,CAAC,CAAC,CAAC;IAChH;IACAd,QAAQ,CAACJ,QAAQ,CAACY,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5B,OAAOF,IAAI;EACb,CAAC,CAAC,OAAOD,KAAU,EAAE;IACnB,OAAOJ,eAAe,CAAC;MAAEI,KAAK,EAAEA,KAAK,CAACO;IAAQ,CAAC,CAAC;EAClD;AACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}