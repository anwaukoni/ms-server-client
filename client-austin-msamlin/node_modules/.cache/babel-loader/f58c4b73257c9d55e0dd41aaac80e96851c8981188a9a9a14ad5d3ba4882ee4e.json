{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nimport { logOut } from '../../features/auth/authSlice';\nconst baseQuery = fetchBaseQuery({\n  baseUrl: 'http://localhost:3500',\n  credentials: 'include',\n  prepareHeaders: (headers, {\n    getState\n  }) => {\n    const state = getState();\n    const token = state.auth.token;\n    if (token) {\n      headers.set(\"authorization\", `Bearer ${token}`);\n    }\n    return headers;\n  }\n});\nconst baseQueryWithReauth = async (args, api, extraOptions) => {\n  let result = await baseQuery(args, api, extraOptions);\n  if (result.error) {\n    api.dispatch(logOut());\n  }\n  return result;\n};\nexport const apiSlice = createApi({\n  baseQuery: baseQueryWithReauth,\n  endpoints: builder => ({})\n});","map":{"version":3,"names":["createApi","fetchBaseQuery","logOut","baseQuery","baseUrl","credentials","prepareHeaders","headers","getState","state","token","auth","set","baseQueryWithReauth","args","api","extraOptions","result","error","dispatch","apiSlice","endpoints","builder"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/app/api/apiSlice.ts"],"sourcesContent":["import { BaseQueryApi, FetchArgs, createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { setCredentials, logOut } from '../../features/auth/authSlice'\nimport { RootState } from '../store'\n\nconst baseQuery = fetchBaseQuery({\n    baseUrl: 'http://localhost:3500',\n    credentials: 'include',\n    prepareHeaders: (headers, { getState}) => {\n        const state = getState() as RootState\n        const token = state.auth.token\n        if (token) {\n            headers.set(\"authorization\", `Bearer ${token}`)\n        }\n        return headers\n    }\n})\n\nconst baseQueryWithReauth = async (args: string | FetchArgs, api: BaseQueryApi, extraOptions: {}) => {\n    let result = await baseQuery(args, api, extraOptions)\n\n    if (result.error) {\n        api.dispatch(logOut())\n    }\n    \n    return result\n}\n\nexport const apiSlice = createApi({\n    baseQuery: baseQueryWithReauth,\n    endpoints: builder => ({})\n})"],"mappings":"AAAA,SAAkCA,SAAS,EAAEC,cAAc,QAAQ,8BAA8B;AACjG,SAAyBC,MAAM,QAAQ,+BAA+B;AAGtE,MAAMC,SAAS,GAAGF,cAAc,CAAC;EAC7BG,OAAO,EAAE,uBAAuB;EAChCC,WAAW,EAAE,SAAS;EACtBC,cAAc,EAAEA,CAACC,OAAO,EAAE;IAAEC;EAAQ,CAAC,KAAK;IACtC,MAAMC,KAAK,GAAGD,QAAQ,CAAC,CAAc;IACrC,MAAME,KAAK,GAAGD,KAAK,CAACE,IAAI,CAACD,KAAK;IAC9B,IAAIA,KAAK,EAAE;MACPH,OAAO,CAACK,GAAG,CAAC,eAAe,EAAE,UAAUF,KAAK,EAAE,CAAC;IACnD;IACA,OAAOH,OAAO;EAClB;AACJ,CAAC,CAAC;AAEF,MAAMM,mBAAmB,GAAG,MAAAA,CAAOC,IAAwB,EAAEC,GAAiB,EAAEC,YAAgB,KAAK;EACjG,IAAIC,MAAM,GAAG,MAAMd,SAAS,CAACW,IAAI,EAAEC,GAAG,EAAEC,YAAY,CAAC;EAErD,IAAIC,MAAM,CAACC,KAAK,EAAE;IACdH,GAAG,CAACI,QAAQ,CAACjB,MAAM,CAAC,CAAC,CAAC;EAC1B;EAEA,OAAOe,MAAM;AACjB,CAAC;AAED,OAAO,MAAMG,QAAQ,GAAGpB,SAAS,CAAC;EAC9BG,SAAS,EAAEU,mBAAmB;EAC9BQ,SAAS,EAAEC,OAAO,KAAK,CAAC,CAAC;AAC7B,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}