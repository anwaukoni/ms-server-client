{"ast":null,"code":"var _jsxFileName = \"/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/todo/TaskList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { editTask, deleteTask, updateSort } from './taskSlice';\nimport { throttle } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const taskList = useAppSelector(state => state.tasks);\n  const [draggedItemIndex, setDraggedItemIndex] = React.useState(null);\n  const onDragStart = index => {\n    setDraggedItemIndex(index);\n  };\n  const onDragOver = useCallback(throttle((e, index) => {\n    // If the item is dragged over itself, ignore\n    if (draggedItemIndex === index || draggedItemIndex === null) return;\n    e.preventDefault();\n    console.log('onDragOver', draggedItemIndex, index);\n\n    // Update the items in the list\n    const updatedItems = [...taskList];\n    const draggedItem = updatedItems[draggedItemIndex];\n    updatedItems.splice(draggedItemIndex, 1);\n    updatedItems.splice(index, 0, draggedItem);\n    setDraggedItemIndex(index);\n    dispatch(updateSort(updatedItems)); // Update items in the Redux store\n  }, 300), [draggedItemIndex, taskList]);\n  // (index: number) => {\n  // };\n\n  const onDragEnd = () => {\n    setDraggedItemIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: taskList.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      onDragStart: () => onDragStart(task.sortOrder),\n      onDragOver: e => onDragOver(e, task.sortOrder),\n      onDragEnd: onDragEnd,\n      draggable: true,\n      style: {\n        padding: '8px',\n        margin: '8px 0',\n        backgroundColor: draggedItemIndex === task.sortOrder ? 'green' : 'lightgray',\n        cursor: 'grab'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: task.message,\n        onChange: e => dispatch(editTask({\n          id: task.id,\n          message: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(deleteTask({\n          id: task.id\n        })),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, task.sortOrder, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"1dOwWKyw09HCGoYP3RCgowEFBXA=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useCallback","useAppDispatch","useAppSelector","editTask","deleteTask","updateSort","throttle","jsxDEV","_jsxDEV","TaskList","_s","dispatch","taskList","state","tasks","draggedItemIndex","setDraggedItemIndex","useState","onDragStart","index","onDragOver","e","preventDefault","console","log","updatedItems","draggedItem","splice","onDragEnd","children","map","task","sortOrder","draggable","style","padding","margin","backgroundColor","cursor","type","value","message","onChange","id","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/todo/TaskList.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { AppDispatch, RootState } from '../../app/store';\nimport { editTask, deleteTask, updateSort } from './taskSlice';\nimport { throttle } from 'lodash';\n\nconst  TaskList: React.FC = () => {\n  const dispatch: AppDispatch = useAppDispatch()\n  const  taskList = useAppSelector((state: RootState)=> state.tasks);\n  const [draggedItemIndex, setDraggedItemIndex] = React.useState<number | null>(null);\n\n  const onDragStart = (index: number) => {\n    setDraggedItemIndex(index);\n  };\n\n  const onDragOver = useCallback(\n    throttle((e, index: number) => {\n      // If the item is dragged over itself, ignore\n      if (draggedItemIndex === index || draggedItemIndex === null) return;\n\n      e.preventDefault();\n      console.log('onDragOver', draggedItemIndex, index);\n    \n      // Update the items in the list\n      const updatedItems = [...taskList];\n      const draggedItem = updatedItems[draggedItemIndex];\n      updatedItems.splice(draggedItemIndex, 1);\n      updatedItems.splice(index, 0, draggedItem);\n      setDraggedItemIndex(index);\n      dispatch(updateSort(updatedItems)); // Update items in the Redux store\n\n    }, 300),\n    [draggedItemIndex, taskList]\n  ) \n  // (index: number) => {\n  // };\n\n  const onDragEnd = () => {\n    setDraggedItemIndex(null);\n  };\n\n  return (\n    <div>\n      {taskList.map((task) => (\n        <div \n          key={task.sortOrder}\n          onDragStart={() => onDragStart(task.sortOrder)}\n          onDragOver={(e) => onDragOver(e, task.sortOrder)}\n          onDragEnd={onDragEnd}\n          draggable\n          style={{\n            padding: '8px',\n            margin: '8px 0',\n            backgroundColor: draggedItemIndex === task.sortOrder ? 'green' : 'lightgray',\n            cursor: 'grab'\n          }}\n        >\n          <input\n            type=\"text\"\n            value={task.message}\n            onChange={(e) => dispatch(editTask({ id: task.id, message: e.target.value }))} />\n          <button onClick={() => dispatch(deleteTask({id: task.id}))}>X</button>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default  TaskList;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}