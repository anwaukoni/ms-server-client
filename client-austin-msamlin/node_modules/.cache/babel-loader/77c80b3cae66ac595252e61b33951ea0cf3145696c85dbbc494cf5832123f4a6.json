{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nimport { addTasks } from './taskSlice';\n// const getToken = () => {\n//   const token = localStorage.getItem('token');\n//   if (!token) {\n//     throw new Error('No token saved');\n//   }\n// }\n\nconst options = {\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYUBnbWFpbC5jb20iLCJpYXQiOjE3MTgwNTc3MjUsImV4cCI6MTcxODE0NDEyNX0.Ve29Agtq_FRaWkQBxRiGviv_eIJOs2ZJgTMvDpArXPQ\",\n    \"Content-Length\": \"0\"\n  }\n};\nexport const fetchTasks = createAsyncThunk('tasks/fetchTasks', async (_, {\n  dispatch,\n  rejectWithValue\n}) => {\n  try {\n    const response = await fetch('http://localhost:3333/tasks', options);\n    if (!response.ok) {\n      return rejectWithValue({\n        error: 'Network response was not ok'\n      });\n    }\n    const data = await response.json();\n    ;\n    const result = data.map(({\n      id,\n      message,\n      sortOrder\n    }) => ({\n      id,\n      message,\n      sortOrder\n    }));\n    dispatch(addTasks(result));\n    return data;\n  } catch (error) {\n    return rejectWithValue({\n      error: error.message\n    });\n  }\n});\nconst postOptions = {\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYUBnbWFpbC5jb20iLCJpYXQiOjE3MTgwNTc3MjUsImV4cCI6MTcxODE0NDEyNX0.Ve29Agtq_FRaWkQBxRiGviv_eIJOs2ZJgTMvDpArXPQ\"\n  }\n};\nexport const batchAddTasks = createAsyncThunk('tasks/addTasks', async (_, {\n  getState,\n  rejectWithValue\n}) => {\n  try {\n    const state = getState();\n    const tasks = state.tasks;\n    console.log(tasks);\n    console.log(JSON.stringify(tasks));\n    const response = await fetch('http://localhost:3333/tasks/batch', {\n      ...postOptions,\n      body: JSON.stringify(tasks)\n    });\n    if (!response.ok) {\n      return rejectWithValue({\n        error: 'Network response was not ok'\n      });\n    }\n    const status = await response.json();\n    return status;\n  } catch (error) {\n    return rejectWithValue({\n      error: error.message\n    });\n  }\n});","map":{"version":3,"names":["createAsyncThunk","addTasks","options","fetchTasks","_","dispatch","rejectWithValue","response","fetch","ok","error","data","json","result","map","id","message","sortOrder","postOptions","batchAddTasks","getState","state","tasks","console","log","JSON","stringify","body","status"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/task/taskApi.ts"],"sourcesContent":["\nimport { createAsyncThunk } from '@reduxjs/toolkit';\nimport { Task, addTasks } from './taskSlice';\nimport { RootState } from '../../app/store';\n\n// const getToken = () => {\n//   const token = localStorage.getItem('token');\n//   if (!token) {\n//     throw new Error('No token saved');\n//   }\n// }\n\nconst options = {\n  \"method\": \"GET\",\n  \"headers\": {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYUBnbWFpbC5jb20iLCJpYXQiOjE3MTgwNTc3MjUsImV4cCI6MTcxODE0NDEyNX0.Ve29Agtq_FRaWkQBxRiGviv_eIJOs2ZJgTMvDpArXPQ\",\n    \"Content-Length\": \"0\"\n  }\n};\n\nexport const fetchTasks = createAsyncThunk<Task[], void, { rejectValue: { error: string } }>(\n  'tasks/fetchTasks',\n  async (_, { dispatch, rejectWithValue }) => {\n    try {\n      const response = await fetch('http://localhost:3333/tasks', options);\n      if (!response.ok) {\n        return rejectWithValue({ error: 'Network response was not ok' });\n      }\n      const data: Task[] = await response.json();;\n\n      const result = data.map(({id, message, sortOrder}) => ({id, message, sortOrder}))\n      dispatch(addTasks(result));\n      return data;\n    } catch (error: any) {\n      return rejectWithValue({ error: error.message });\n    }\n  }\n);\n\nconst postOptions = {\n  \"method\": \"POST\",\n  \"headers\": {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImVtYWlsIjoiYUBnbWFpbC5jb20iLCJpYXQiOjE3MTgwNTc3MjUsImV4cCI6MTcxODE0NDEyNX0.Ve29Agtq_FRaWkQBxRiGviv_eIJOs2ZJgTMvDpArXPQ\",\n  },\n}\n\nexport const batchAddTasks = createAsyncThunk<Task[], void, { rejectValue: { error: string } }>(\n  'tasks/addTasks',\n  async (_, { getState, rejectWithValue }) => {\n    try {\n      const state = getState() as RootState;\n      const tasks: any = state.tasks;\n      console.log(tasks);\n      console.log(JSON.stringify(tasks));\n      const response = await fetch('http://localhost:3333/tasks/batch', { ...postOptions, body: JSON.stringify(tasks) });\n      if (!response.ok) {\n        return rejectWithValue({ error: 'Network response was not ok' });\n      }\n      const status = await response.json()\n      return status;\n    } catch (error: any) {\n      return rejectWithValue({ error: error.message });\n    }\n  }\n);"],"mappings":"AACA,SAASA,gBAAgB,QAAQ,kBAAkB;AACnD,SAAeC,QAAQ,QAAQ,aAAa;AAG5C;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG;EACd,QAAQ,EAAE,KAAK;EACf,SAAS,EAAE;IACT,cAAc,EAAE,mCAAmC;IACnD,eAAe,EAAE,iLAAiL;IAClM,gBAAgB,EAAE;EACpB;AACF,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CACxC,kBAAkB,EAClB,OAAOI,CAAC,EAAE;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAEN,OAAO,CAAC;IACpE,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;MAChB,OAAOH,eAAe,CAAC;QAAEI,KAAK,EAAE;MAA8B,CAAC,CAAC;IAClE;IACA,MAAMC,IAAY,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAAC;IAE3C,MAAMC,MAAM,GAAGF,IAAI,CAACG,GAAG,CAAC,CAAC;MAACC,EAAE;MAAEC,OAAO;MAAEC;IAAS,CAAC,MAAM;MAACF,EAAE;MAAEC,OAAO;MAAEC;IAAS,CAAC,CAAC,CAAC;IACjFZ,QAAQ,CAACJ,QAAQ,CAACY,MAAM,CAAC,CAAC;IAC1B,OAAOF,IAAI;EACb,CAAC,CAAC,OAAOD,KAAU,EAAE;IACnB,OAAOJ,eAAe,CAAC;MAAEI,KAAK,EAAEA,KAAK,CAACM;IAAQ,CAAC,CAAC;EAClD;AACF,CACF,CAAC;AAED,MAAME,WAAW,GAAG;EAClB,QAAQ,EAAE,MAAM;EAChB,SAAS,EAAE;IACT,cAAc,EAAE,kBAAkB;IAClC,eAAe,EAAE;EACnB;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGnB,gBAAgB,CAC3C,gBAAgB,EAChB,OAAOI,CAAC,EAAE;EAAEgB,QAAQ;EAAEd;AAAgB,CAAC,KAAK;EAC1C,IAAI;IACF,MAAMe,KAAK,GAAGD,QAAQ,CAAC,CAAc;IACrC,MAAME,KAAU,GAAGD,KAAK,CAACC,KAAK;IAC9BC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,CAAC;IAClC,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;MAAE,GAAGU,WAAW;MAAES,IAAI,EAAEF,IAAI,CAACC,SAAS,CAACJ,KAAK;IAAE,CAAC,CAAC;IAClH,IAAI,CAACf,QAAQ,CAACE,EAAE,EAAE;MAChB,OAAOH,eAAe,CAAC;QAAEI,KAAK,EAAE;MAA8B,CAAC,CAAC;IAClE;IACA,MAAMkB,MAAM,GAAG,MAAMrB,QAAQ,CAACK,IAAI,CAAC,CAAC;IACpC,OAAOgB,MAAM;EACf,CAAC,CAAC,OAAOlB,KAAU,EAAE;IACnB,OAAOJ,eAAe,CAAC;MAAEI,KAAK,EAAEA,KAAK,CAACM;IAAQ,CAAC,CAAC;EAClD;AACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}