{"ast":null,"code":"var _jsxFileName = \"/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/todo/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport todos from './todoSlice';\nimport { deleteTodo } from './todoSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const todoList = useAppSelector(state => state.todos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: todoList.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo.message,\n        onChange: e => dispatch(todos.actions.editTodo({\n          id: todo.id,\n          message: e.target.value\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => dispatch(deleteTodo({\n          id: todo.id\n        })),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"IX5l14w3Cp7hek0ClZiK1J2mqX8=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useAppDispatch","useAppSelector","todos","deleteTodo","jsxDEV","_jsxDEV","TodoList","_s","dispatch","todoList","state","children","map","todo","type","value","message","onChange","e","actions","editTodo","id","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/anwaukoni/Desktop/Dev/client-austin-msamlin/src/features/todo/TodoList.tsx"],"sourcesContent":["import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { AppDispatch, RootState } from '../../app/store';\nimport todos from './todoSlice';\nimport { editTodo, deleteTodo } from './todoSlice';\n\nconst TodoList: React.FC = () => {\n  const dispatch: AppDispatch = useAppDispatch()\n  const todoList = useAppSelector((state: RootState)=> state.todos);\n\n  return (\n    <div>\n      {todoList.map((todo) => (\n        <div key={todo.id}>\n          <input\n            type=\"text\"\n            value={todo.message}\n            onChange={(e) => dispatch(todos.actions.editTodo({ id: todo.id, message: e.target.value }))} />\n          <button onClick={() => dispatch(deleteTodo({id: todo.id}))}>X</button>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default TodoList;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,cAAc,QAAQ,iBAAiB;AAEhE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAAmBC,UAAU,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAqB,GAAGR,cAAc,CAAC,CAAC;EAC9C,MAAMS,QAAQ,GAAGR,cAAc,CAAES,KAAgB,IAAIA,KAAK,CAACR,KAAK,CAAC;EAEjE,oBACEG,OAAA;IAAAM,QAAA,EACGF,QAAQ,CAACG,GAAG,CAAEC,IAAI,iBACjBR,OAAA;MAAAM,QAAA,gBACEN,OAAA;QACES,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEF,IAAI,CAACG,OAAQ;QACpBC,QAAQ,EAAGC,CAAC,IAAKV,QAAQ,CAACN,KAAK,CAACiB,OAAO,CAACC,QAAQ,CAAC;UAAEC,EAAE,EAAER,IAAI,CAACQ,EAAE;UAAEL,OAAO,EAAEE,CAAC,CAACI,MAAM,CAACP;QAAM,CAAC,CAAC;MAAE;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjGrB,OAAA;QAAQsB,OAAO,EAAEA,CAAA,KAAMnB,QAAQ,CAACL,UAAU,CAAC;UAACkB,EAAE,EAAER,IAAI,CAACQ;QAAE,CAAC,CAAC,CAAE;QAAAV,QAAA,EAAC;MAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAL9Db,IAAI,CAACQ,EAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMZ,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAnB,EAAA,CAjBKD,QAAkB;EAAA,QACQN,cAAc,EAC3BC,cAAc;AAAA;AAAA2B,EAAA,GAF3BtB,QAAkB;AAmBxB,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}